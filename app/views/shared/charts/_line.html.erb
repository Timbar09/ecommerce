<% options = local_assigns[:options] || {} %>
<% chart_data = process_chart_data(data, options) %>

<% path_data = "M" %>
<% data.each_with_index do |point, index| %>
  <% x = (index.to_f / (data.size - 1)) * 100 %>
  <% y = 100 - ((point[1].to_f / chart_data[:highest_value_rounded_up]) * 100) %>
  <% if index == 0 %>
    <% path_data += "#{x},#{y}" %>
  <% else %>
    <% prev_x = ((index - 1).to_f / (data.size - 1)) * 100 %>
    <% prev_y = 100 - ((data[index - 1][1].to_f / chart_data[:highest_value_rounded_up]) * 100) %>
    <% control_x1 = (prev_x + x) / 2 %>
    <% control_y1 = prev_y %>
    <% control_x2 = (prev_x + x) / 2 %>
    <% control_y2 = y %>
    <% path_data += " C #{control_x1},#{control_y1} #{control_x2},#{control_y2} #{x},#{y}" %>
  <% end %>
<% end %>

<%# Set the fill color to none by default %>
<% fill_color = "none" %>

<%# Close the path to create an area chart and set the fill color %>
<% if chart_data[:area_chart] %>
  <% path_data += " L 100,100 L 0,100 Z" %>
  <% fill_color = chart_data[:rgba_color] %>
<% end %>

<div class="chart__container" style="<%= chart_data[:style_string] %>">
  <div class="chart chart__line flex">
    <%# Generate the x-axis grid lines %>
    <% (0..chart_data[:x_axis_grid_num]).each do |num| %>
      <div class="chart__grid chart__grid--x" style="bottom: <%= (num.to_f / chart_data[:x_axis_grid_num]) * 100 %>%;" data-value="<%= num * chart_data[:denominator] %>">
        <div class="chart__grid--label">
          <%= num * chart_data[:denominator] %>
        </div>
      </div>
    <% end %>

    <%# Render the SVG Path %>
    <svg class="chart__svg" viewBox="0 0 100 100" preserveAspectRatio="none">
      <path d="<%= path_data %>" fill="<%= fill_color %>" stroke="<%= chart_data[:hex_color] %>" stroke-width="2" vector-effect="non-scaling-stroke" />
    </svg>

    <%# Generate the lines %>
    <% data.each do |point| %>
      <% point_styles = {
        "--point-x" => "#{(point[0].to_f / chart_data[:highest_value_rounded_up]) * 100}%",
        "--point-y" => "#{(point[1].to_f / chart_data[:highest_value_rounded_up]) * 100}%",
        "--point-color" => chart_data[:hex_color],
      } %>
      <% point_style_string = point_styles.map { |key, value| "#{key}: #{value};" }.join(" ") %>

      <div class="chart__point--container" style="<%= point_style_string %>" title="<%= point[1] %>">
        <p class="chart__point--label"><%= point[0] %></p>
      </div>
    <% end %>
  </div>
</div>